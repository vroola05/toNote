.tab.tabMenu {
  position: relative;
  width: 0px;
  min-width: 0px;
  height: 100%;
  background: $color-primary;
  font-family: $default-font;
  color: $default-font-color;
  overflow: hidden;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-transition: min-width $default-animation-length, width $default-animation-length;
  transition: min-width $default-animation-length, width $default-animation-length;

  &.stack {
    flex: initial;
    -webkit-flex-direction: row;
    flex-direction: row;
    min-width: $default-menu-width;
    &.hide {
      width: 0px;
      min-width: 0px;
    }

    &.color {
      border-left: $color-secondary solid 2px;
      padding-left: $default-padding/2;
    }
    &.color:before {
      border-left: 4px solid $color-border;
      content: "";
      display: block;
      position: absolute;
      top: 0px;
      left: 0px;
      right: 0px;
      bottom: 0px;
      pointer-events: none;
    }
  }

  .itemContainer {
    display: flex;
    flex-direction: column;
    height: 100%;
    background-color: inherit;

    .itemHeaderContainer {
      display: flex;
      flex-direction: row;
      width: 100%;

      .menuName {
        flex: auto;
        padding: $default-padding;
        font-size: $font-size-big;
      }
      .btnSort {
        .icon {
          width: 100%!important;
          height: 100%!important;
          padding: 0!important;
        }
        
      }
    }
    

    .itemList {
      flex: auto;
      overflow-y: auto;
      background-color: inherit;

      .item {
        display: flex;
        flex-direction: row;
        align-items: center;
        background-color: inherit;
        padding: $default-padding/2 $default-padding $default-padding/2 $default-padding;
        position: relative;
        cursor: pointer;
        &.active {
          font-weight: $font-weight-bold;
          filter: brightness(90%);
        }
        .color {
          min-width: $default-menu-icon-size/2;
          min-height: $default-menu-icon-size/2;
          width: $default-menu-icon-size/2;
          height: $default-menu-icon-size/2;
          padding-right: $default-padding;
          svg {
            vertical-align: middle;
            .colorRect {
              stroke: $default-font-color;
              width: $default-menu-icon-size/2;
              height: $default-menu-icon-size/2;
            }
          }
        }
        .name {
        }

        &:hover, &.dragHover {
          color: darken($color-secondary, 50%);
          filter: brightness(95%);
        }
      }
    }

    .options {
      display: flex;
      flex-direction: row;
      width: 100%;
      font-weight: bold;
      background-color: inherit;
      cursor: pointer;
      align-items: center;

      .icon {
        float: left;
        padding: $default-padding;
        font-size: 20px;
      }
      .text {
        float: left;
        padding-left: $default-padding;
      }
    }
  }
}


@media (min-width: 0px) and (max-width: $default-width-mobile) {
  .tab.tabMenu {
    width: 0px;
    min-width: 0px;
    height: 100%;

    .itemContainer {
      .menuName {
        font-size: $mobile-font-size-big;
        padding: $mobile-padding;
      }
      .itemList {
        max-height: 100%;
        .item {
          padding: $mobile-padding $mobile-padding * 2;
        }
      }
      .addBtnDesktop {
        display: none;
      }
    }
  }

  .tabMenu.active {
    width: 100% !important;
  }
  .tabMenu.stack:not(.active) {
    min-width: 0px !important;
  }
}

@media (min-width: $default-width-mobile+1) and (max-width: $default-width-tablet) {
  .tab.tabMenu {
    .itemContainer {
      .addBtnMobile {
        display: none;
      }
    }
  }
}
@media (min-width: $default-width-tablet+1) and (max-width: $default-width-desktop) {
  .tab.tabMenu {
    .itemContainer {
      .addBtnMobile {
        display: none;
      }
    }
  }
}
@media (min-width: $default-width-desktop+1) {
  .tab.tabMenu {
    .itemContainer {
      .addBtnMobile {
        display: none;
      }
    }
  }
}